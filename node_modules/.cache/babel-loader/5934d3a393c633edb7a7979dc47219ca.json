{"ast":null,"code":"const VERSION_INCREASE = 0;\n\nconst fetch = options => new Promise((resolve, reject) => {\n  require(\"https\").get(options, function (response) {\n    let body = \"\";\n\n    if (response.statusCode !== 200) {\n      reject(new Error(\"Request failed. Status code: \" + response.statusCode));\n      response.resume();\n      return;\n    }\n\n    response.on(\"error\", err => reject(err));\n    response.on(\"data\", chunk => body += chunk);\n    response.on(\"end\", () => resolve(body));\n  });\n});\n\nasync function generate() {\n  let changelog = await fetch({\n    host: \"raw.githubusercontent.com\",\n    path: \"/FortAwesome/Font-Awesome/master/CHANGELOG.md\"\n  });\n  let version = (changelog.match(/(?:\\n|^)##\\s+\\[(\\d+\\.\\d+\\.\\d+)\\]/) || [, \"\"])[1];\n\n  if (version.length < 3) {\n    throw new Error(\"Couldn't parse version\");\n  }\n\n  var packageVersion = version.replace(/\\.\\d$/, x => \".\" + (parseInt(x.substr(1)) + VERSION_INCREASE));\n  console.log(\"Font Awesome v\" + version + \" (package version \" + packageVersion + \")\");\n  let source = await fetch({\n    host: \"pro.fontawesome.com\",\n    path: \"/releases/v\" + version + \"/css/all.css\",\n    headers: {\n      \"Referer\": \"https://mo-mar.de\"\n    }\n  });\n  var fa = \"/* Unicode mappings for FontAwesome Pro v\" + version + \" */\\nvar fa=function(i){return fa[i.replace(/-./g,function(x){return x.substr(1).toUpperCase()})]};\";\n  var namecount = 0;\n  var main = source.match(/(\\}\\.fa-[a-z0-9\\-]+(?::before,\\.fa-[a-z0-9\\-]+)*):before\\{content:\"\\\\([0-9a-f]+)\"/g);\n\n  if (!main) {\n    console.log(\"Couldn't parse icons\");\n    return process.exit(1);\n  }\n\n  for (var i = 0; i < main.length; i++) {\n    var icon = main[i].match(/(\\}\\.fa-[a-z0-9\\-]+(?::before,\\.fa-[a-z0-9\\-]+)*):before\\{content:\"\\\\([0-9a-f]+)\"/).slice(1);\n    icon[0] = icon[0].substr(5).split(/:before,\\.fa-/);\n\n    for (var k = 0; k < icon[0].length; k++) {\n      icon[0][k] = icon[0][k].replace(/-./g, function (x) {\n        return x.substr(1).toUpperCase();\n      }); // fa.500px is not valid JS\n\n      if (icon[0][k].match(/^[^a-z]/)) fa += \"fa[\\\"\" + icon[0][k] + \"\\\"]=\\\"\\\\u\" + icon[1] + \"\\\";\";else fa += \"fa.\" + icon[0][k] + \"=\\\"\\\\u\" + icon[1] + \"\\\";\";\n    }\n\n    namecount += icon[0].length;\n  }\n\n  fa += \"module.exports=fa;\";\n\n  require(\"fs\").writeFileSync(__dirname + \"/index.js\", fa);\n\n  console.log(main.length + \" icons parsed (\" + namecount + \" names)\");\n\n  var packageInfo = require(\"fs\").readFileSync(__dirname + \"/package.json\").toString();\n\n  packageInfo = packageInfo.replace(/(\\\"version\\\":\\s*\\\")[\\d.]+\\\"/, \"$1\" + packageVersion + \"\\\"\");\n\n  require(\"fs\").writeFileSync(__dirname + \"/package.json\", packageInfo);\n}\n\ngenerate().then(() => console.log(\"Successfully generated new index.js\")).catch(err => console.error(err));","map":{"version":3,"sources":["C:/Users/Kartik Gupta/Desktop/React-Icas/icas/node_modules/fontawesome/generate.js"],"names":["VERSION_INCREASE","fetch","options","Promise","resolve","reject","require","get","response","body","statusCode","Error","resume","on","err","chunk","generate","changelog","host","path","version","match","length","packageVersion","replace","x","parseInt","substr","console","log","source","headers","fa","namecount","main","process","exit","i","icon","slice","split","k","toUpperCase","writeFileSync","__dirname","packageInfo","readFileSync","toString","then","catch","error"],"mappings":"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","sourcesContent":["const VERSION_INCREASE = 0;\n\nconst fetch = options => new Promise((resolve, reject) => {\n    require(\"https\").get(options, function(response) {\n        let body = \"\";\n        if (response.statusCode !== 200) { reject(new Error(\"Request failed. Status code: \" + response.statusCode)); response.resume(); return; }\n        response.on(\"error\", err => reject(err));\n        response.on(\"data\", chunk => body += chunk);\n        response.on(\"end\", () => resolve(body));\n    });\n});\n\nasync function generate() {\n    let changelog = await fetch({\n        host: \"raw.githubusercontent.com\",\n        path: \"/FortAwesome/Font-Awesome/master/CHANGELOG.md\"\n    });\n    let version = (changelog.match(/(?:\\n|^)##\\s+\\[(\\d+\\.\\d+\\.\\d+)\\]/)||[,\"\"])[1];\n    if (version.length < 3) {\n        throw new Error(\"Couldn't parse version\");\n    }\n    var packageVersion = version.replace(/\\.\\d$/, x => \".\" + (parseInt(x.substr(1)) + VERSION_INCREASE));\n    console.log(\"Font Awesome v\" + version + \" (package version \" + packageVersion + \")\");\n    \n    let source = await fetch({\n        host: \"pro.fontawesome.com\",\n        path: \"/releases/v\" + version + \"/css/all.css\",\n        headers: {\n            \"Referer\": \"https://mo-mar.de\"\n        }\n    });\n    \n    var fa = \"/* Unicode mappings for FontAwesome Pro v\" + version + \" */\\nvar fa=function(i){return fa[i.replace(/-./g,function(x){return x.substr(1).toUpperCase()})]};\"\n\n    var namecount = 0;\n    var main = source.match(/(\\}\\.fa-[a-z0-9\\-]+(?::before,\\.fa-[a-z0-9\\-]+)*):before\\{content:\"\\\\([0-9a-f]+)\"/g);\n    if (!main) { console.log(\"Couldn't parse icons\"); return process.exit(1); }\n    for (var i = 0; i < main.length; i++) {\n        var icon = main[i].match(/(\\}\\.fa-[a-z0-9\\-]+(?::before,\\.fa-[a-z0-9\\-]+)*):before\\{content:\"\\\\([0-9a-f]+)\"/).slice(1);\n        icon[0] = icon[0].substr(5).split(/:before,\\.fa-/);\n        for (var k = 0; k < icon[0].length; k++) {\n            icon[0][k] = icon[0][k].replace(/-./g, function(x) { return x.substr(1).toUpperCase() });\n            // fa.500px is not valid JS\n            if (icon[0][k].match(/^[^a-z]/)) fa += \"fa[\\\"\" + icon[0][k] + \"\\\"]=\\\"\\\\u\" + icon[1] + \"\\\";\";\n            else fa += \"fa.\" + icon[0][k] + \"=\\\"\\\\u\" + icon[1] + \"\\\";\";\n        }\n        namecount += icon[0].length;\n    }\n\n    fa += \"module.exports=fa;\";\n    require(\"fs\").writeFileSync(__dirname + \"/index.js\", fa);\n\n    console.log(main.length + \" icons parsed (\" + namecount + \" names)\")\n\n    var packageInfo = require(\"fs\").readFileSync(__dirname + \"/package.json\").toString();\n    packageInfo = packageInfo.replace(/(\\\"version\\\":\\s*\\\")[\\d.]+\\\"/, \"$1\"+packageVersion+\"\\\"\");\n    require(\"fs\").writeFileSync(__dirname + \"/package.json\", packageInfo);\n}\n\ngenerate()\n    .then(() => console.log(\"Successfully generated new index.js\"))\n    .catch(err => console.error(err));\n\n"]},"metadata":{},"sourceType":"script"}